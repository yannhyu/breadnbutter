https://github.com/jacksoncage/phppgadmin-docker
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

docker run -i -d --name nginx -p 8080:80 -v /home/airflow/php7code/www:/var/www/html -e APACHE_SERVERNAME=holiday.io -e POSTGRES_HOST=zzyu01.medlytix.org -e POSTGRES_PORT=5432 -e POSTGRES_DB=demodb -e POSTGRES_USER=test_user -e POSTGRES_PASSWORD=med yannyu/phppgadmin

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
http://127.0.0.1:8080/phpinfo.php

Configuration File (php.ini) Path   /etc/php5/apache2
Loaded Configuration File   /etc/php5/apache2/php.ini 


ADD ./phppgadmin.conf /etc/apache2/conf.d/phppgadmin
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

docker exec -t -i nginx /bin/bash


root@bff1831bce82:/# which php
/usr/bin/php
root@bff1831bce82:/# ls /var/www/html/
index.html
root@bff1831bce82:/# 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++

git clone https://github.com/jacksoncage/phppgadmin-docker.git

$ cd phppgadmin-docker
$ sudo docker build -t jacksoncage/phppgadmin .

sudo docker build -t yannyu/phppgadmin .

+++++++++++++++++++++++++++++++++++++++++++++++++++++++

$ sudo docker pull jacksoncage/phppgadmin

+++++++++++++++++++++++++++++++++++++++++++++++++++++++

Start the container

The container has all pre requisites set up to run phpPgAdmin. Specify all needed environment variables.

$ sudo docker run -i -d -p 80 -e APACHE_SERVERNAME=jacksoncage.se -e POSTGRES_HOST=localhost -e POSTGRES_PORT=5432 jacksoncage/phppgadmin



+++++++++++++++++++++++++++++++++++++++++++++++++++++++

docker run -i -d --name nginx -p 8080:80 -v /home/airflow/php7code/www:/var/www/html -e APACHE_SERVERNAME=holiday.io -e POSTGRES_HOST=zzyu01.medlytix.org -e POSTGRES_PORT=5432 -e POSTGRES_DB=demodb -e POSTGRES_USER=test_user -e POSTGRES_PASSWORD=med yannyu/phppgadmin

+++++++++++++++++++++++++++++++++++++++++++++++++++++++

Start the container and keep control

The command above starts the container in deamon mode (-d) and runs in the background. If you want to start it by yourself just to see what happens use this command:

$ sudo docker run -i -t -p 80 -e APACHE_SERVERNAME=jacksoncage.se -e POSTGRES_HOST=localhost -e POSTGRES_PORT=5432 jacksoncage/phppgadmin bash

+++++++++++++++++++++++++++++++++++++++++++++++++++++++

Get the container ip and port

The first command inspects your created container and get the IPv4 address. Second command docker exported port for 8080.

$ sudo docker inspect <container_id> | grep IPAddress | cut -d '"' -f 4
$ sudo docker port <container_id> 80 | cut -d ":" -f2

Now go to <your container's ip>:<container's port> in your browser

docker inspect stupefied_nobel | grep IPAddress | cut -d '"' -f 4
docker port 45107c2ad6f7 80 | cut -d ":" -f2
++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Stop the container

Stopping a running container is possible via the docker api. If only one instance of this container is running this command will stop it:

$ sudo docker stop `sudo docker ps |grep jacksoncage/phppgadmin |cut -d\  -f1`


+++++++++++++++++++++++++++++++++++++++++++


